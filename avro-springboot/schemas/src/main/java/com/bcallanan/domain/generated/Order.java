/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.bcallanan.domain.generated;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Order extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6052487658736399445L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Order\",\"namespace\":\"com.bcallanan.domain.generated\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"logicalType\":\"uuid\"},{\"name\":\"fullname\",\"type\":\"string\"},{\"name\":\"nickname\",\"type\":\"string\",\"doc\":\"Optional nick name field\",\"default\":\"\"},{\"name\":\"nickname1\",\"type\":\"string\",\"doc\":\"Optional nick name1 field\",\"default\":\"\"},{\"name\":\"store\",\"type\":{\"type\":\"record\",\"name\":\"Store\",\"fields\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"address\",\"type\":{\"type\":\"record\",\"name\":\"Address\",\"fields\":[{\"name\":\"addressLine1\",\"type\":\"string\"},{\"name\":\"addressLine2\",\"type\":\"string\",\"doc\":\"Optional send address line\",\"default\":\"\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"zip\",\"type\":\"string\"}]}}]}},{\"name\":\"OrderItems\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OrderItem\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"size\",\"type\":{\"type\":\"enum\",\"name\":\"Size\",\"symbols\":[\"SM\",\"MED\",\"LG\",\"XLG\"]}},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"cost\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":3,\"scale\":2}}]}}},{\"name\":\"pick_up\",\"type\":{\"type\":\"enum\",\"name\":\"PickUp\",\"symbols\":[\"IN_STORE\",\"CURBSIDE\"]},\"default\":\"IN_STORE\"},{\"name\":\"ordered_time\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"ordered_date\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"Status\",\"symbols\":[\"NEW\",\"CLOSED\",\"UPDATED\",\"DELETED\",\"COMPLETED\"]},\"default\":\"NEW\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<Order> ENCODER =
      new BinaryMessageEncoder<Order>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Order> DECODER =
      new BinaryMessageDecoder<Order>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Order> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Order> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Order> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Order>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Order to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Order from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Order instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Order fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence fullname;
  /** Optional nick name field */
  @Deprecated public java.lang.CharSequence nickname;
  /** Optional nick name1 field */
  @Deprecated public java.lang.CharSequence nickname1;
  @Deprecated public com.bcallanan.domain.generated.Store store;
  @Deprecated public java.util.List<com.bcallanan.domain.generated.OrderItem> OrderItems;
  @Deprecated public com.bcallanan.domain.generated.PickUp pick_up;
  @Deprecated public java.time.Instant ordered_time;
  @Deprecated public java.time.LocalDate ordered_date;
  @Deprecated public com.bcallanan.domain.generated.Status status;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Order() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param fullname The new value for fullname
   * @param nickname Optional nick name field
   * @param nickname1 Optional nick name1 field
   * @param store The new value for store
   * @param OrderItems The new value for OrderItems
   * @param pick_up The new value for pick_up
   * @param ordered_time The new value for ordered_time
   * @param ordered_date The new value for ordered_date
   * @param status The new value for status
   */
  public Order(java.lang.CharSequence id, java.lang.CharSequence fullname, java.lang.CharSequence nickname, java.lang.CharSequence nickname1, com.bcallanan.domain.generated.Store store, java.util.List<com.bcallanan.domain.generated.OrderItem> OrderItems, com.bcallanan.domain.generated.PickUp pick_up, java.time.Instant ordered_time, java.time.LocalDate ordered_date, com.bcallanan.domain.generated.Status status) {
    this.id = id;
    this.fullname = fullname;
    this.nickname = nickname;
    this.nickname1 = nickname1;
    this.store = store;
    this.OrderItems = OrderItems;
    this.pick_up = pick_up;
    this.ordered_time = ordered_time.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.ordered_date = ordered_date;
    this.status = status;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return fullname;
    case 2: return nickname;
    case 3: return nickname1;
    case 4: return store;
    case 5: return OrderItems;
    case 6: return pick_up;
    case 7: return ordered_time;
    case 8: return ordered_date;
    case 9: return status;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: fullname = (java.lang.CharSequence)value$; break;
    case 2: nickname = (java.lang.CharSequence)value$; break;
    case 3: nickname1 = (java.lang.CharSequence)value$; break;
    case 4: store = (com.bcallanan.domain.generated.Store)value$; break;
    case 5: OrderItems = (java.util.List<com.bcallanan.domain.generated.OrderItem>)value$; break;
    case 6: pick_up = (com.bcallanan.domain.generated.PickUp)value$; break;
    case 7: ordered_time = (java.time.Instant)value$; break;
    case 8: ordered_date = (java.time.LocalDate)value$; break;
    case 9: status = (com.bcallanan.domain.generated.Status)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'fullname' field.
   * @return The value of the 'fullname' field.
   */
  public java.lang.CharSequence getFullname() {
    return fullname;
  }


  /**
   * Sets the value of the 'fullname' field.
   * @param value the value to set.
   */
  public void setFullname(java.lang.CharSequence value) {
    this.fullname = value;
  }

  /**
   * Gets the value of the 'nickname' field.
   * @return Optional nick name field
   */
  public java.lang.CharSequence getNickname() {
    return nickname;
  }


  /**
   * Sets the value of the 'nickname' field.
   * Optional nick name field
   * @param value the value to set.
   */
  public void setNickname(java.lang.CharSequence value) {
    this.nickname = value;
  }

  /**
   * Gets the value of the 'nickname1' field.
   * @return Optional nick name1 field
   */
  public java.lang.CharSequence getNickname1() {
    return nickname1;
  }


  /**
   * Sets the value of the 'nickname1' field.
   * Optional nick name1 field
   * @param value the value to set.
   */
  public void setNickname1(java.lang.CharSequence value) {
    this.nickname1 = value;
  }

  /**
   * Gets the value of the 'store' field.
   * @return The value of the 'store' field.
   */
  public com.bcallanan.domain.generated.Store getStore() {
    return store;
  }


  /**
   * Sets the value of the 'store' field.
   * @param value the value to set.
   */
  public void setStore(com.bcallanan.domain.generated.Store value) {
    this.store = value;
  }

  /**
   * Gets the value of the 'OrderItems' field.
   * @return The value of the 'OrderItems' field.
   */
  public java.util.List<com.bcallanan.domain.generated.OrderItem> getOrderItems() {
    return OrderItems;
  }


  /**
   * Sets the value of the 'OrderItems' field.
   * @param value the value to set.
   */
  public void setOrderItems(java.util.List<com.bcallanan.domain.generated.OrderItem> value) {
    this.OrderItems = value;
  }

  /**
   * Gets the value of the 'pick_up' field.
   * @return The value of the 'pick_up' field.
   */
  public com.bcallanan.domain.generated.PickUp getPickUp() {
    return pick_up;
  }


  /**
   * Sets the value of the 'pick_up' field.
   * @param value the value to set.
   */
  public void setPickUp(com.bcallanan.domain.generated.PickUp value) {
    this.pick_up = value;
  }

  /**
   * Gets the value of the 'ordered_time' field.
   * @return The value of the 'ordered_time' field.
   */
  public java.time.Instant getOrderedTime() {
    return ordered_time;
  }


  /**
   * Sets the value of the 'ordered_time' field.
   * @param value the value to set.
   */
  public void setOrderedTime(java.time.Instant value) {
    this.ordered_time = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'ordered_date' field.
   * @return The value of the 'ordered_date' field.
   */
  public java.time.LocalDate getOrderedDate() {
    return ordered_date;
  }


  /**
   * Sets the value of the 'ordered_date' field.
   * @param value the value to set.
   */
  public void setOrderedDate(java.time.LocalDate value) {
    this.ordered_date = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public com.bcallanan.domain.generated.Status getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(com.bcallanan.domain.generated.Status value) {
    this.status = value;
  }

  /**
   * Creates a new Order RecordBuilder.
   * @return A new Order RecordBuilder
   */
  public static com.bcallanan.domain.generated.Order.Builder newBuilder() {
    return new com.bcallanan.domain.generated.Order.Builder();
  }

  /**
   * Creates a new Order RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Order RecordBuilder
   */
  public static com.bcallanan.domain.generated.Order.Builder newBuilder(com.bcallanan.domain.generated.Order.Builder other) {
    if (other == null) {
      return new com.bcallanan.domain.generated.Order.Builder();
    } else {
      return new com.bcallanan.domain.generated.Order.Builder(other);
    }
  }

  /**
   * Creates a new Order RecordBuilder by copying an existing Order instance.
   * @param other The existing instance to copy.
   * @return A new Order RecordBuilder
   */
  public static com.bcallanan.domain.generated.Order.Builder newBuilder(com.bcallanan.domain.generated.Order other) {
    if (other == null) {
      return new com.bcallanan.domain.generated.Order.Builder();
    } else {
      return new com.bcallanan.domain.generated.Order.Builder(other);
    }
  }

  /**
   * RecordBuilder for Order instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Order>
    implements org.apache.avro.data.RecordBuilder<Order> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence fullname;
    /** Optional nick name field */
    private java.lang.CharSequence nickname;
    /** Optional nick name1 field */
    private java.lang.CharSequence nickname1;
    private com.bcallanan.domain.generated.Store store;
    private com.bcallanan.domain.generated.Store.Builder storeBuilder;
    private java.util.List<com.bcallanan.domain.generated.OrderItem> OrderItems;
    private com.bcallanan.domain.generated.PickUp pick_up;
    private java.time.Instant ordered_time;
    private java.time.LocalDate ordered_date;
    private com.bcallanan.domain.generated.Status status;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.bcallanan.domain.generated.Order.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.fullname)) {
        this.fullname = data().deepCopy(fields()[1].schema(), other.fullname);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.nickname)) {
        this.nickname = data().deepCopy(fields()[2].schema(), other.nickname);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.nickname1)) {
        this.nickname1 = data().deepCopy(fields()[3].schema(), other.nickname1);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.store)) {
        this.store = data().deepCopy(fields()[4].schema(), other.store);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasStoreBuilder()) {
        this.storeBuilder = com.bcallanan.domain.generated.Store.newBuilder(other.getStoreBuilder());
      }
      if (isValidValue(fields()[5], other.OrderItems)) {
        this.OrderItems = data().deepCopy(fields()[5].schema(), other.OrderItems);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.pick_up)) {
        this.pick_up = data().deepCopy(fields()[6].schema(), other.pick_up);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.ordered_time)) {
        this.ordered_time = data().deepCopy(fields()[7].schema(), other.ordered_time);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.ordered_date)) {
        this.ordered_date = data().deepCopy(fields()[8].schema(), other.ordered_date);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.status)) {
        this.status = data().deepCopy(fields()[9].schema(), other.status);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing Order instance
     * @param other The existing instance to copy.
     */
    private Builder(com.bcallanan.domain.generated.Order other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.fullname)) {
        this.fullname = data().deepCopy(fields()[1].schema(), other.fullname);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.nickname)) {
        this.nickname = data().deepCopy(fields()[2].schema(), other.nickname);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.nickname1)) {
        this.nickname1 = data().deepCopy(fields()[3].schema(), other.nickname1);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.store)) {
        this.store = data().deepCopy(fields()[4].schema(), other.store);
        fieldSetFlags()[4] = true;
      }
      this.storeBuilder = null;
      if (isValidValue(fields()[5], other.OrderItems)) {
        this.OrderItems = data().deepCopy(fields()[5].schema(), other.OrderItems);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.pick_up)) {
        this.pick_up = data().deepCopy(fields()[6].schema(), other.pick_up);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.ordered_time)) {
        this.ordered_time = data().deepCopy(fields()[7].schema(), other.ordered_time);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ordered_date)) {
        this.ordered_date = data().deepCopy(fields()[8].schema(), other.ordered_date);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.status)) {
        this.status = data().deepCopy(fields()[9].schema(), other.status);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'fullname' field.
      * @return The value.
      */
    public java.lang.CharSequence getFullname() {
      return fullname;
    }


    /**
      * Sets the value of the 'fullname' field.
      * @param value The value of 'fullname'.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder setFullname(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.fullname = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'fullname' field has been set.
      * @return True if the 'fullname' field has been set, false otherwise.
      */
    public boolean hasFullname() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'fullname' field.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder clearFullname() {
      fullname = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'nickname' field.
      * Optional nick name field
      * @return The value.
      */
    public java.lang.CharSequence getNickname() {
      return nickname;
    }


    /**
      * Sets the value of the 'nickname' field.
      * Optional nick name field
      * @param value The value of 'nickname'.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder setNickname(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.nickname = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'nickname' field has been set.
      * Optional nick name field
      * @return True if the 'nickname' field has been set, false otherwise.
      */
    public boolean hasNickname() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'nickname' field.
      * Optional nick name field
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder clearNickname() {
      nickname = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'nickname1' field.
      * Optional nick name1 field
      * @return The value.
      */
    public java.lang.CharSequence getNickname1() {
      return nickname1;
    }


    /**
      * Sets the value of the 'nickname1' field.
      * Optional nick name1 field
      * @param value The value of 'nickname1'.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder setNickname1(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.nickname1 = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'nickname1' field has been set.
      * Optional nick name1 field
      * @return True if the 'nickname1' field has been set, false otherwise.
      */
    public boolean hasNickname1() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'nickname1' field.
      * Optional nick name1 field
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder clearNickname1() {
      nickname1 = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'store' field.
      * @return The value.
      */
    public com.bcallanan.domain.generated.Store getStore() {
      return store;
    }


    /**
      * Sets the value of the 'store' field.
      * @param value The value of 'store'.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder setStore(com.bcallanan.domain.generated.Store value) {
      validate(fields()[4], value);
      this.storeBuilder = null;
      this.store = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'store' field has been set.
      * @return True if the 'store' field has been set, false otherwise.
      */
    public boolean hasStore() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'store' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.bcallanan.domain.generated.Store.Builder getStoreBuilder() {
      if (storeBuilder == null) {
        if (hasStore()) {
          setStoreBuilder(com.bcallanan.domain.generated.Store.newBuilder(store));
        } else {
          setStoreBuilder(com.bcallanan.domain.generated.Store.newBuilder());
        }
      }
      return storeBuilder;
    }

    /**
     * Sets the Builder instance for the 'store' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.bcallanan.domain.generated.Order.Builder setStoreBuilder(com.bcallanan.domain.generated.Store.Builder value) {
      clearStore();
      storeBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'store' field has an active Builder instance
     * @return True if the 'store' field has an active Builder instance
     */
    public boolean hasStoreBuilder() {
      return storeBuilder != null;
    }

    /**
      * Clears the value of the 'store' field.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder clearStore() {
      store = null;
      storeBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderItems' field.
      * @return The value.
      */
    public java.util.List<com.bcallanan.domain.generated.OrderItem> getOrderItems() {
      return OrderItems;
    }


    /**
      * Sets the value of the 'OrderItems' field.
      * @param value The value of 'OrderItems'.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder setOrderItems(java.util.List<com.bcallanan.domain.generated.OrderItem> value) {
      validate(fields()[5], value);
      this.OrderItems = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderItems' field has been set.
      * @return True if the 'OrderItems' field has been set, false otherwise.
      */
    public boolean hasOrderItems() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'OrderItems' field.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder clearOrderItems() {
      OrderItems = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'pick_up' field.
      * @return The value.
      */
    public com.bcallanan.domain.generated.PickUp getPickUp() {
      return pick_up;
    }


    /**
      * Sets the value of the 'pick_up' field.
      * @param value The value of 'pick_up'.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder setPickUp(com.bcallanan.domain.generated.PickUp value) {
      validate(fields()[6], value);
      this.pick_up = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'pick_up' field has been set.
      * @return True if the 'pick_up' field has been set, false otherwise.
      */
    public boolean hasPickUp() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'pick_up' field.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder clearPickUp() {
      pick_up = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'ordered_time' field.
      * @return The value.
      */
    public java.time.Instant getOrderedTime() {
      return ordered_time;
    }


    /**
      * Sets the value of the 'ordered_time' field.
      * @param value The value of 'ordered_time'.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder setOrderedTime(java.time.Instant value) {
      validate(fields()[7], value);
      this.ordered_time = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'ordered_time' field has been set.
      * @return True if the 'ordered_time' field has been set, false otherwise.
      */
    public boolean hasOrderedTime() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'ordered_time' field.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder clearOrderedTime() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'ordered_date' field.
      * @return The value.
      */
    public java.time.LocalDate getOrderedDate() {
      return ordered_date;
    }


    /**
      * Sets the value of the 'ordered_date' field.
      * @param value The value of 'ordered_date'.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder setOrderedDate(java.time.LocalDate value) {
      validate(fields()[8], value);
      this.ordered_date = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'ordered_date' field has been set.
      * @return True if the 'ordered_date' field has been set, false otherwise.
      */
    public boolean hasOrderedDate() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'ordered_date' field.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder clearOrderedDate() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public com.bcallanan.domain.generated.Status getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder setStatus(com.bcallanan.domain.generated.Status value) {
      validate(fields()[9], value);
      this.status = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.bcallanan.domain.generated.Order.Builder clearStatus() {
      status = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Order build() {
      try {
        Order record = new Order();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.fullname = fieldSetFlags()[1] ? this.fullname : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.nickname = fieldSetFlags()[2] ? this.nickname : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.nickname1 = fieldSetFlags()[3] ? this.nickname1 : (java.lang.CharSequence) defaultValue(fields()[3]);
        if (storeBuilder != null) {
          try {
            record.store = this.storeBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("store"));
            throw e;
          }
        } else {
          record.store = fieldSetFlags()[4] ? this.store : (com.bcallanan.domain.generated.Store) defaultValue(fields()[4]);
        }
        record.OrderItems = fieldSetFlags()[5] ? this.OrderItems : (java.util.List<com.bcallanan.domain.generated.OrderItem>) defaultValue(fields()[5]);
        record.pick_up = fieldSetFlags()[6] ? this.pick_up : (com.bcallanan.domain.generated.PickUp) defaultValue(fields()[6]);
        record.ordered_time = fieldSetFlags()[7] ? this.ordered_time : (java.time.Instant) defaultValue(fields()[7]);
        record.ordered_date = fieldSetFlags()[8] ? this.ordered_date : (java.time.LocalDate) defaultValue(fields()[8]);
        record.status = fieldSetFlags()[9] ? this.status : (com.bcallanan.domain.generated.Status) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Order>
    WRITER$ = (org.apache.avro.io.DatumWriter<Order>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Order>
    READER$ = (org.apache.avro.io.DatumReader<Order>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










